// MIT License
// 
// Copyright (c) 2020 Lehrstuhl Informatik 11 - RWTH Aachen University
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
// 
// This file is part of cpm_lab.
// 
// Author: i11 - Embedded Software, RWTH Aachen University

#ifndef PARAMETER_IDL
#define PARAMETER_IDL

/**
 * \enum ParameterType
 * \brief A parameter set in the network can have one of the following types. Further information can be found e.g. in Parameter.
 * 
 * https://cpm.embedded.rwth-aachen.de/doc/pages/viewpage.action?pageId=11698287
 * \ingroup cpmlib_idl
 */
enum ParameterType 
{
    Invalid,
    Bool,
    Int32,
    UInt64,
    _Double,
    _String,
    Vector_Int32,
    Vector_Double
};

/**
 * \struct Parameter
 * \brief Parameter values can be distributed by the LCC. This message contains the answer of it after a parameter request was sent.
 * (This behaviour is already implemented, e.g. in cpm::parameter_bool to get a boolean parameter)
 * 
 * https://cpm.embedded.rwth-aachen.de/doc/pages/viewpage.action?pageId=11698287
 * \ingroup cpmlib_idl
 */
struct Parameter 
{
    //! The name of the parameter
    string name; //@key

    //! The parameter type
    ParameterType type;

    //! Since weak typing is not supported, we reserve a member for each type.
    boolean value_bool;

    //! Since weak typing is not supported, we reserve a member for each type.
    unsigned long long value_uint64_t;

    //! Since weak typing is not supported, we reserve a member for each type.
    sequence<long>   values_int32;

    //! Since weak typing is not supported, we reserve a member for each type.
    sequence<double> values_double;

    //! Since weak typing is not supported, we reserve a member for each type.
    string value_string;
};
#endif